<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessControl_NoCurrentUser" xml:space="preserve">
    <value>No current user set</value>
  </data>
  <data name="AccessControl_RemoveInvalidRule" xml:space="preserve">
    <value>Attempt to remove an access control rule that does not exist.</value>
  </data>
  <data name="AccessReferenceMap_AccessDeniedLog" xml:space="preserve">
    <value>Request for invalid indirect reference</value>
  </data>
  <data name="AccessReferenceMap_AccessDeniedUser" xml:space="preserve">
    <value>Access denied</value>
  </data>
  <data name="AcessControl_AddDuplicateRule" xml:space="preserve">
    <value>Attempt to add an access control rule that already exists.</value>
  </data>
  <data name="Encoder_InputValidationFailure" xml:space="preserve">
    <value>Input validation failure</value>
  </data>
  <data name="Encoder_MixedEncoding1" xml:space="preserve">
    <value>Mixed encoding ({0}x) detected</value>
  </data>
  <data name="Encoder_MultipleEncoding1" xml:space="preserve">
    <value>Multiple ({0}x) encoding detected</value>
  </data>
  <data name="Encoder_MultipleMixedEncoding2" xml:space="preserve">
    <value>Multiple ({0}x) and mixed encoding ({1}x) detected</value>
  </data>
  <data name="Encryptor_DecryptFailed1" xml:space="preserve">
    <value>Failed to decrypt : {0}</value>
  </data>
  <data name="Encryptor_DecryptionFailure" xml:space="preserve">
    <value>Decryption failed</value>
  </data>
  <data name="Encryptor_EncryptionFailure" xml:space="preserve">
    <value>Encryption failure</value>
  </data>
  <data name="Encryptor_EncryptorCreateFailed" xml:space="preserve">
    <value>Error creating encryptor</value>
  </data>
  <data name="Encryptor_InvalidSeal" xml:space="preserve">
    <value>Invalid seal</value>
  </data>
  <data name="Encryptor_SealDecryptFailed" xml:space="preserve">
    <value>Seal did not decrypt properly</value>
  </data>
  <data name="Encryptor_SealExpired" xml:space="preserve">
    <value>Seal expiration date has expired</value>
  </data>
  <data name="Encryptor_SealWrongFormat" xml:space="preserve">
    <value>Seal did not contain properly formatted separator</value>
  </data>
  <data name="Encryptor_WrongHashAlg1" xml:space="preserve">
    <value>Can't find has algorithm {0}</value>
  </data>
  <data name="HttpUtilities_AuthFailed" xml:space="preserve">
    <value>Authentication failed</value>
  </data>
  <data name="HttpUtilities_CsrfCheckFailed" xml:space="preserve">
    <value>Possibly forged HTTP request without proper CSRF token detected</value>
  </data>
  <data name="HttpUtilities_InsecureMethod" xml:space="preserve">
    <value>Insecure method</value>
  </data>
  <data name="HttpUtilities_InsecureProtocol" xml:space="preserve">
    <value>Insecure protocol</value>
  </data>
  <data name="HttpUtilities_InsecureRequest" xml:space="preserve">
    <value>Insecure request</value>
  </data>
  <data name="InstrusionDetector_EventReceived1" xml:space="preserve">
    <value>Security event {0} received</value>
  </data>
  <data name="InstrusionDetector_ExceededQuota3" xml:space="preserve">
    <value>User exceeded quota of  {0}  per  {1} seconds for event  {2} .</value>
  </data>
  <data name="InstrusionDetector_ExceededQuota4" xml:space="preserve">
    <value>User exceeded quota of  {0}  per  {1} seconds for event  {2} . Taking action {3}</value>
  </data>
  <data name="InstrusionDetector_InvalidActionName" xml:space="preserve">
    <value>Invalid action name</value>
  </data>
  <data name="InstrusionDetector_ThresholdExceeded1" xml:space="preserve">
    <value>Threshold exceeded for {0}</value>
  </data>
  <data name="IntrusionDetector_ActionIsReferenced1" xml:space="preserve">
    <value>Action {0} is referenced</value>
  </data>
  <data name="IntrusionDetector_ActionNotFound1" xml:space="preserve">
    <value>Required action {0} not found</value>
  </data>
  <data name="IntrusionDetector_DuplicateActionName" xml:space="preserve">
    <value>An action with this name already exists</value>
  </data>
  <data name="IntrusionDetector_ThresholdExceeded" xml:space="preserve">
    <value>Threshold exceeded</value>
  </data>
  <data name="IntrusionDetector_UnknownEventName" xml:space="preserve">
    <value>Unknown event name.</value>
  </data>
  <data name="InvalidArgument" xml:space="preserve">
    <value>Invalid argument value</value>
  </data>
  <data name="Randomizer_AlgCreateFailed1" xml:space="preserve">
    <value>Can't find random algorithm {1}</value>
  </data>
  <data name="Randomizer_Failure" xml:space="preserve">
    <value>Randomizer failure</value>
  </data>
  <data name="RequestThrottleRule_MaximumExceeded" xml:space="preserve">
    <value>Maximum request count exceeded</value>
  </data>
  <data name="RequestThrottleRule_SessionRequired" xml:space="preserve">
    <value>Session not initialized</value>
  </data>
</root>